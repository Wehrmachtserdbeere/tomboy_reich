# ATOMIC BOMBS
sp_nuclear_bomb = {
	specialization = specialization_nuclear	
	icon = GFX_sp_nuclear_bomb

	project_tags = sp_tag_nuclear_warfare
	
	prototype_time = sp_time.prototype.long	
	complexity = sp_complexity.large
	resource_cost = {
		resources = { steel=2 tungsten=8 chromium=2 }
	}
	special_project_parent = {
		sp_nuclear_reactor
	}
	allowed = {
		
	}
	available = { 
		OR = {
			NOT = {
				original_tag = BEL
			}
			AND = {
				original_tag = BEL
				OR = {
					has_completed_focus = BEL_fascism_research_nuclear
					# has_completed_focus = 
				}
			}
		}
	}
	
	project_output = {
		country_effects = {
			add_nuclear_bombs = 1
			custom_effect_tooltip = sp_nuclear_bomb_tt
			hidden_effect = {
				set_technology = {
					nukes = 1
					popup = no
				}
			}
		}

		scientist_effects = { #The limit to only apply the effect if is_character = USA_robert_oppenheimer throws error and doesn't work.
			set_character_flag = USA_oppenheimer_made_the_nuke_flag
		}
		
	}
	
	empty_reward_weight = {
		base = 0.5
	}

	generic_prototype_rewards = {
		sp_nuclear_scientist_xp_generic_reward
		sp_nuclear_minor_progress_generic_reward
		sp_nuclear_generic_electronics_tech_reward
		sp_nuclear_war_support_generic_reward
		sp_nuclear_generic_industry_tech_reward
		sp_nuclear_major_political_interference_generic_reward
		sp_nuclear_bomb_theoretical_breakthrough_generic_reward
		sp_nuclear_bomb_critical_mass_generic_reward
		sp_nuclear_bomb_accident_generic_reward
	}
	
	unique_prototype_rewards = {
	
		sp_nuclear_bomb_test_prototype_reward = {
			fire_only_once = yes

			threshold = { 
				min = 70
				max = 84
			}

			weight = {
				base = 100
			}
			
			option = {
				token = sp_nuclear_bomb_test_prototype_reward_test_bomb
				
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_test_prototype_reward_keep_bomb
				
				iteration_output = {
					country_effects = {
						add_nuclear_bombs = 1
					}
				}
			}
		}

		sp_nuclear_bomb_espionage_threats_reward = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 80
			}

			weight = {
				base = 1
				modifier = {
					factor = 10 
					FROM = {
						has_war = yes 
					}
				}
			}
			
			option = {
				token = sp_nuclear_bomb_espionage_threats_reward_no
				
				iteration_output = {
					country_effects = { 
						set_country_flag = nuclear_bomb_low_security_flag
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_nuclear
						}
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_espionage_threats_reward_increase_security
				
				iteration_output = {
					country_effects = {
						set_country_flag = nuclear_bomb_high_security_flag
						custom_effect_tooltip = sp_nuclear_bomb_espionage_threats_reward_increase_security_tt
						FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
					}
				}
			}
		}

		sp_nuclear_bomb_information_leak_reward = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 100
			}

			weight = {
				base = 0.2
				modifier = {
					factor = 2
					FROM = { has_country_flag = nuclear_reactor_public_flag }
				}
				modifier = {
					factor = 0
					FROM = { has_war = no }
				}
				modifier = {
					factor = 5
					FROM = { has_country_flag = nuclear_bomb_low_security_flag }
				}
				modifier = {
					factor = 0.5
					FROM = { has_country_flag = nuclear_bomb_high_security_flag }
				}
				
			}
			
			option = {
				token = sp_nuclear_bomb_information_leak_reward_option
				
				iteration_output = {
					country_effects = {
						random_enemy_country = {
							limit = {
								NOT = { is_special_project_completed = sp:sp_nuclear_bomb }
							}
							custom_effect_tooltip = sp_nuclear_bomb_information_leak_reward_tt
							hidden_effect = {
								country_event = {
									id = sp_nuclear_project_events.1
									hours = 8 
									random_hours = 4 
								}
							}
						}
					}
				}
			}
		}
		sp_nuclear_bomb_breakthrough_plutonium_reward = {
			fire_only_once = yes

			threshold = { 
				min = 20
				max = 60
			}

			weight = {
				base = 1
				modifier = {
					factor = 0.5
					FROM = { has_country_flag = nuclear_bomb_high_security_flag }
				}
			}
			
			option = {
				token = sp_nuclear_bomb_breakthrough_plutonium_reward_option
				
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
					}
				}
			}
		}		
	}
}

# Thermo Nuclear Bombs
sp_thermo_nuclear_bomb = {
	specialization = specialization_nuclear	
	icon = GFX_sp_thermo_nuclear_bomb

	project_tags = sp_tag_nuclear_warfare
	
	prototype_time = sp_time.prototype.long 
	complexity = sp_complexity.insane

	resource_cost = {
		resources = { steel=2 tungsten=10 chromium=3 }
	}

	special_project_parent = {
		sp_nuclear_bomb
	}
	allowed = {
		has_dlc = "Gotterdammerung"
	}
	available = { 
		OR = {
			NOT = {
				original_tag = BEL
			}
			#AND = {
			#	original_tag = BEL
			#	OR = {
			#		has_completed_focus = Terror Focuses - TODO
			#	}
			#}
		}
	}
	
	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_thermo_nuclear_bomb_tt
			hidden_effect = {
				set_technology = {
					thermonuclear_bombs = 1
					popup = no
				}
			}
		}
	}
	
	empty_reward_weight = {
		base = 0.5
	}

	generic_prototype_rewards = {
		sp_nuclear_scientist_xp_generic_reward
		sp_nuclear_minor_progress_generic_reward
		sp_nuclear_generic_electronics_tech_reward
		sp_nuclear_war_support_generic_reward
		sp_nuclear_generic_industry_tech_reward
		sp_nuclear_major_political_interference_generic_reward
		sp_nuclear_bomb_theoretical_breakthrough_generic_reward
		sp_nuclear_bomb_critical_mass_generic_reward
		sp_nuclear_bomb_accident_generic_reward
	}
	
	unique_prototype_rewards = {
		sp_thermonuclear_bomb_test_reward = {
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 80
			}

			weight = {
				base = 1000
				modifier = {
					factor = 0
					FROM = {
						num_of_nukes < 5 # To minimize the risk of this not being a good option to get
					}
				}
			}
			option = {
				token = sp_thermonuclear_bomb_test_reward_option_no
				
				iteration_output = {
					country_effects = {
					}
				}
			}
			option = {
				token = sp_thermonuclear_bomb_test_reward_option_yes
				
				iteration_output = {
					country_effects = {
						IF = {
							limit = {
								num_of_nukes > 0
							}
							add_nuclear_bombs = -1
							FROM = { add_project_progress_ratio = constant:sp_progress.gain.high }
							set_country_flag = thermonuclear_weapon_test_flag
						}
						ELSE = {
							custom_effect_tooltip = "sp_no_nukes_available_tt"
						}
						
					}
				}
			}
		}
	}
}